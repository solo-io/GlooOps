---
# Source: gloo-mesh-enterprise/templates/deployment.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gloo-mesh-mgmt-server
  name: gloo-mesh-mgmt-server
  namespace: gloo-mesh
---
# Source: gloo-mesh-enterprise/templates/deployment.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gloo-mesh-ui
  name: gloo-mesh-ui
  namespace: gloo-mesh
---
# Source: gloo-mesh-enterprise/templates/deployment.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gloo-mesh-redis
  name: gloo-mesh-redis
  namespace: gloo-mesh
---
# Source: gloo-mesh-enterprise/templates/deployment.yaml
# Service for gloo-mesh-mgmt-server

apiVersion: v1
kind: Service
metadata:
  labels:
    app: gloo-mesh-mgmt-server
  annotations:
    app.kubernetes.io/name: gloo-mesh-mgmt-server
    prometheus.io/path: /metrics
    prometheus.io/port: "9091"
    prometheus.io/scrape: "true"
  name: gloo-mesh-mgmt-server
  namespace: gloo-mesh
spec:
  selector:
    app: gloo-mesh-mgmt-server
  type: LoadBalancer
  ports:
  - name: healthcheck
    port: 8091
  - name: grpc
    port: 9900
---
# Source: gloo-mesh-enterprise/templates/deployment.yaml
# Service for gloo-mesh-ui

apiVersion: v1
kind: Service
metadata:
  labels:
    app: gloo-mesh-ui
  annotations:
    app.kubernetes.io/name: gloo-mesh-ui
  name: gloo-mesh-ui
  namespace: gloo-mesh
spec:
  selector:
    app: gloo-mesh-ui
  type: LoadBalancer
  ports:
  - name: grpc
    port: 10101
  - name: console
    port: 8090
  - name: healthcheck
    port: 8081
---
# Source: gloo-mesh-enterprise/templates/deployment.yaml
# Service for gloo-mesh-redis

apiVersion: v1
kind: Service
metadata:
  labels:
    app: gloo-mesh-redis
  annotations:
    app.kubernetes.io/name: gloo-mesh-redis
  name: gloo-mesh-redis
  namespace: gloo-mesh
spec:
  selector:
    app: gloo-mesh-redis
  type: ClusterIP
  ports:
  - name: redis
    port: 6379
---
# Source: gloo-mesh-enterprise/templates/deployment.yaml
---


# Deployment manifest for gloo-mesh-mgmt-server

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gloo-mesh-mgmt-server
  annotations:
    app.kubernetes.io/name: gloo-mesh-mgmt-server
  name: gloo-mesh-mgmt-server
  namespace: gloo-mesh
spec:
  selector:
    matchLabels:
      app: gloo-mesh-mgmt-server
  template:
    metadata:
      labels:
        app: gloo-mesh-mgmt-server
      annotations:
        app.kubernetes.io/name: gloo-mesh-mgmt-server
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: gloo-mesh-mgmt-server
      volumes:
      - name: license-keys
        secret:
          secretName: 'license-keys'
      containers:
      - name: gloo-mesh-mgmt-server
        image: gcr.io/gloo-mesh/gloo-mesh-mgmt-server:2.1.0
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --cluster=mgmt
        - --admin-namespace=gloo-mesh
        - --grpc-port=9900
        - --stats-port=9091
        - --dev-logger=false
        - --relay-server-tls-secret-name=relay-server-tls-secret
        - --relay-server-tls-secret-namespace=gloo-mesh
        - --relay-tls-signing-secret-name=relay-tls-signing-secret
        - --relay-tls-signing-secret-namespace=gloo-mesh
        - --relay-identity-token-secret-name=relay-identity-token-secret
        - --relay-identity-token-secret-namespace=gloo-mesh
        - --relay-identity-token-secret-key=token
        - --disable-relay-ca=false
        - --relay-push-rbac=true
        - --max-grpc-message-size=4294967295
        - --concurrency=10
        - --enable-cluster-load-balancing=false
        - --insecure=false
        - --verbose=true
        - --leader-election=true
        - --http-healthcheck-port=8091
        - --redis-address=gloo-mesh-redis.gloo-mesh:6379
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: LICENSE_KEY
            valueFrom:
              secretKeyRef:
                key: key
                name: gloo-mesh-enterprise-license
                optional: true
        volumeMounts:
        - mountPath: /etc/license-keys
          name: license-keys
          readOnly: true
        resources:
          requests:
            cpu: 125m
            memory: 256Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 10101
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
---
# Source: gloo-mesh-enterprise/templates/deployment.yaml
# Deployment manifest for gloo-mesh-ui

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gloo-mesh-ui
    gloo-mesh: gloo-mesh-ui
  annotations:
    app.kubernetes.io/name: gloo-mesh-ui
  name: gloo-mesh-ui
  namespace: gloo-mesh
spec:
  selector:
    matchLabels:
      app: gloo-mesh-ui
      gloo-mesh: gloo-mesh-ui
  template:
    metadata:
      labels:
        app: gloo-mesh-ui
        gloo-mesh: gloo-mesh-ui
      annotations:
        app.kubernetes.io/name: gloo-mesh-ui
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: gloo-mesh-ui
      volumes:
      - name: license-keys
        secret:
          secretName: 'license-keys'
      - configMap:
          name: dashboard-envoy
        name: envoy-config
      - emptyDir: {}
        name: empty-cache
      - emptyDir: {}
        name: empty-run
      containers:
      - name: gloo-mesh-ui
        image: gcr.io/gloo-mesh/gloo-mesh-apiserver:2.1.0
        imagePullPolicy: IfNotPresent
        args:
        - --cluster=mgmt
        - --grpc-port=10101
        - --health-check-port=8081
        - --prometheus-url=http://prometheus-server
        - --redis-address=gloo-mesh-redis.gloo-mesh:6379
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: LICENSE_KEY
            valueFrom:
              secretKeyRef:
                key: key
                name: gloo-mesh-enterprise-license
                optional: true
        volumeMounts:
        - mountPath: /etc/license-keys
          name: license-keys
          readOnly: true
        resources:
          requests:
            cpu: 125m
            memory: 256Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 10101
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        readinessProbe:
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
      - name: envoy
        image: gcr.io/gloo-mesh/gloo-mesh-envoy:2.1.0
        imagePullPolicy: IfNotPresent
        env:
          - name: ENVOY_UID
            value: "0"
        volumeMounts:
        - mountPath: /etc/envoy
          name: envoy-config
          readOnly: true
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 10101
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        readinessProbe:
          httpGet:
            path: /
            port: 20202
          initialDelaySeconds: 5
          periodSeconds: 10
      - name: console
        image: gcr.io/gloo-mesh/gloo-mesh-ui:2.1.0
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /var/cache/nginx
          name: empty-cache
        - mountPath: /var/run
          name: empty-run
        resources:
          requests:
            cpu: 125m
            memory: 256Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 10101
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        readinessProbe:
          httpGet:
            path: /
            port: 8090
          initialDelaySeconds: 5
          periodSeconds: 10
---
# Source: gloo-mesh-enterprise/templates/deployment.yaml
# Deployment manifest for gloo-mesh-redis

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gloo-mesh-redis
    gloo-mesh: gloo-mesh-redis
  annotations:
    app.kubernetes.io/name: gloo-mesh-redis
  name: gloo-mesh-redis
  namespace: gloo-mesh
spec:
  selector:
    matchLabels:
      app: gloo-mesh-redis
      gloo-mesh: gloo-mesh-redis
  template:
    metadata:
      labels:
        app: gloo-mesh-redis
        gloo-mesh: gloo-mesh-redis
      annotations:
        app.kubernetes.io/name: gloo-mesh-redis
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: gloo-mesh-redis
      volumes:
      - emptyDir: {}
        name: data
      containers:
      - name: gloo-mesh-redis
        image: docker.io/redis:7.0.4
        imagePullPolicy: IfNotPresent
        args:
        - --save ""
        - --appendonly no
        env:
          - name: MASTER
            value: "true"
        volumeMounts:
        - mountPath: /redis-master-data
          name: data
        resources:
          requests:
            cpu: 125m
            memory: 256Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 10101
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
---
# Source: gloo-mesh-enterprise/templates/deployment.yaml
# Code generated by skv2. DO NOT EDIT.
---
# Source: gloo-mesh-enterprise/templates/deployment.yaml
---
---
# Source: gloo-mesh-enterprise/templates/deployment.yaml
---
